# Generated by Django 4.0.8 on 2022-10-07 20:17

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, verbose_name='Наименование')),
                ('title_tech', models.CharField(blank=True, max_length=100, verbose_name='Техническое наименование')),
                ('html_color', models.CharField(blank=True, max_length=100, verbose_name='Цвет HTML')),
                ('css_color', models.CharField(blank=True, max_length=100, verbose_name='CSS класс')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категория',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, verbose_name='Наименование')),
                ('title_tech', models.CharField(blank=True, max_length=100, verbose_name='Техническое наименование')),
                ('html_color', models.CharField(blank=True, max_length=100, verbose_name='Цвет HTML')),
                ('css_color', models.CharField(blank=True, max_length=100, verbose_name='CSS класс')),
            ],
            options={
                'verbose_name': 'Приоритет',
                'verbose_name_plural': 'Приоритет',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, verbose_name='Наименование')),
                ('title_tech', models.CharField(blank=True, max_length=100, verbose_name='Техническое наименование')),
                ('html_color', models.CharField(blank=True, max_length=100, verbose_name='Цвет HTML')),
                ('css_color', models.CharField(blank=True, max_length=100, verbose_name='CSS класс')),
            ],
            options={
                'verbose_name': 'Статус',
                'verbose_name_plural': 'Статус',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Tasks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, verbose_name='Название')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='Описание')),
                ('progress', models.FloatField(blank=True, default=0, null=True, verbose_name='Прогресс')),
                ('is_completed', models.BooleanField(blank=True, default=False, verbose_name='Исполнено')),
                ('bdate', models.DateField(blank=True, verbose_name='Дата начала')),
                ('edate', models.DateField(blank=True, verbose_name='Срок')),
                ('tdate', models.DateField(blank=True, verbose_name='Фактическая дата выполнения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания задачи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления задачи')),
                ('estimated_time', models.FloatField(blank=True, default=0, null=True, verbose_name='Оценочное время')),
                ('author', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='author', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('co_executor', models.ManyToManyField(blank=True, related_name='co_executor', to=settings.AUTH_USER_MODEL, verbose_name='Со-исполнители')),
                ('executor', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='executor', to=settings.AUTH_USER_MODEL, verbose_name='Исполнитель')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='proj_man.tasks')),
                ('priority', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='Priority', to='proj_man.priority', verbose_name='Приоритет')),
                ('related_tasks', models.ManyToManyField(blank=True, related_name='related_tasks_for', to='proj_man.tasks', verbose_name='Связанные задачи')),
                ('status', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='status', to='proj_man.status', verbose_name='Стаус')),
                ('viewers', models.ManyToManyField(blank=True, related_name='viewers', to=settings.AUTH_USER_MODEL, verbose_name='Наблюдатели')),
            ],
            options={
                'verbose_name': 'Задачи',
                'verbose_name_plural': 'Задачи',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TimeTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Описание')),
                ('track_date', models.DateField(blank=True, verbose_name='Дата')),
                ('spent_time', models.FloatField(blank=True, default=0, null=True, verbose_name='Затраченное время')),
                ('author', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('task', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='Задача', to='proj_man.tasks')),
            ],
            options={
                'verbose_name': 'Учет времени',
                'verbose_name_plural': 'Учет времени',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, verbose_name='Название')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='Описание')),
                ('bdate', models.DateField(blank=True, verbose_name='Дата начала')),
                ('edate', models.DateField(blank=True, verbose_name='Дата завершения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания проекта')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления проекта')),
                ('category', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, related_name='category', to='proj_man.category', verbose_name='Категория')),
                ('managers', models.ManyToManyField(blank=True, related_name='managers', to=settings.AUTH_USER_MODEL, verbose_name='Руководители проекта')),
                ('moderators', models.ManyToManyField(blank=True, related_name='moderators', to=settings.AUTH_USER_MODEL, verbose_name='Модераторы проекта')),
                ('participants', models.ManyToManyField(blank=True, related_name='participants', to=settings.AUTH_USER_MODEL, verbose_name='Участники проекта')),
                ('priority_tasks', models.ManyToManyField(blank=True, related_name='priority_tasks', to='proj_man.priority', verbose_name='Статусы для задач')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='proj_man.status', verbose_name='Статус')),
                ('status_tasks', models.ManyToManyField(blank=True, related_name='status_tasks', to='proj_man.status', verbose_name='Статусы для задач')),
            ],
            options={
                'verbose_name': 'Проекты',
                'verbose_name_plural': 'Проекты',
                'ordering': ['-created_at'],
            },
        ),
    ]
